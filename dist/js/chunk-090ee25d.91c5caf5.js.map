{"version":3,"sources":["webpack:///./src/views/crafted/pages/register/EmailVerification.vue","webpack:///./node_modules/@chenfengyuan/vue-countdown/dist/vue-countdown.esm.js","webpack:///./src/views/crafted/pages/register/EmailVerification.vue?8d3e","webpack:///./src/core/helpers/breadcrumb.ts"],"names":["class","id","ref","type","to","as","onSubmit","validation-schema","validationSchema","onInvalidSubmit","codeCheckRequestMade","codeIsValid","formData","code","placeholder","name","autocomplete","oninput","maxlength","time","onCountdownEnd","totalSeconds","disabled","counting","startCountdown","MILLISECONDS_SECOND","MILLISECONDS_MINUTE","MILLISECONDS_HOUR","MILLISECONDS_DAY","EVENT_ABORT","EVENT_END","EVENT_PROGRESS","EVENT_START","EVENT_VISIBILITY_CHANGE","index","props","autoStart","Boolean","default","emitEvents","interval","Number","validator","value","now","Function","Date","tag","String","transform","emits","endTime","totalMilliseconds","requestId","computed","Math","floor","this","days","watch","$props","deep","immediate","start","document","addEventListener","handleVisibilityChange","removeEventListener","pause","methods","$emit","visibilityState","continue","delay","min","init","prev","step","range","progress","requestAnimationFrame","end","cancelAnimationFrame","hours","minutes","seconds","milliseconds","totalDays","totalHours","totalMinutes","max","update","$slots","undefined","components","Form","Field","ErrorMessage","VueCountdown","route","router","params","email","push","loading","initialFormData","values","ApiService","post","then","response","verified","console","error","catch","err","message","finally","log","shape","required","matches","__exports__","render","setCurrentPageBreadcrumbs","pageTitle","breadcrumbs","dispatch","SET_BREADCRUMB_ACTION","title","pageBreadcrumbPath","setCurrentPageTitle"],"mappings":"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","file":"js/chunk-090ee25d.91c5caf5.js","sourcesContent":["<script>\nimport { computed, defineComponent, onMounted, ref } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { Form, ErrorMessage, Field } from \"vee-validate\";\nimport { StepperComponent } from \"@/assets/ts/components\";\nimport ApiService from \"@/core/services/ApiService\";\nimport { ElMessage } from \"element-plus\";\nimport { useForm } from \"vee-validate\";\nimport Swal from \"sweetalert2/dist/sweetalert2.min.js\";\nimport * as Yup from \"yup\";\nimport VueCountdown from \"@chenfengyuan/vue-countdown\";\n// import Step1 from \"@/components/wizard/steps/Step1.vue\";\n// import Step2 from \"@/components/wizard/steps/Step2.vue\";\n// import Step3 from \"@/components/wizard/steps/Step3.vue\";\n// import Step4 from \"@/components/wizard/steps/Step4.vue\";\n// import Step5 from \"@/components/wizard/steps/Step5.vue\";\nimport { setCurrentPageBreadcrumbs } from \"@/core/helpers/breadcrumb\";\n\nexport default defineComponent({\n  name: \"SignUp\",\n  components: {\n    Form,\n    Field,\n    ErrorMessage,\n    VueCountdown,\n    // Step1,\n    // Step2,\n    // Step3,\n    // Step4,\n    // Step5,\n  },\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n\n    if (!route.params.email) {\n      router.push({ name: \"RegisterBasicInfo\" });\n    }\n    const formRef = ref(null);\n    const loading = ref(false);\n    const codeCheckRequestMade = ref(false);\n    const codeIsValid = ref(false);\n\n    const initialFormData = {\n      code: \"\",\n    };\n    const formData = ref({ ...initialFormData });\n\n    function onSubmit(values) {\n      codeCheckRequestMade.value = true;\n      ApiService.post(`auth/verify-registration-email-code`, {\n        email: route.params.email,\n        ...formData.value,\n      })\n        .then((response) => {\n          codeIsValid.value = response.verified;\n          if (response.verified) {\n            router.push({\n              name: \"RegisterUserNameSelection\",\n              params: { ...route.params },\n            });\n          } else {\n            console.error(\"code yanlis\");\n          }\n        })\n        .catch((err) => {\n          ElMessage.error(err.message || \"Server error\");\n        })\n        .finally(() => {\n          loading.value = false;\n        });\n    }\n\n    function onInvalidSubmit() {\n      console.log(\"in valid\");\n    }\n\n    const validationSchema = Yup.object().shape({\n      code: Yup.string()\n        .required()\n        .matches(/^[0-9]+$/, \"Must be only digits\")\n        .min(6, \"Code should be 6 digits\")\n        .max(6, \"Code should be 6 digits\"),\n    });\n\n    const counting = ref(true);\n    function startCountdown() {\n      ApiService.post(`auth/send-registration-email-verification-code`, {\n        email: route.params.email,\n      })\n        .then((response) => {\n          counting.value = true;\n        })\n        .catch((err) => {\n          ElMessage.error(err.message || \"Server error\");\n        })\n        .finally(() => {\n          loading.value = false;\n        });\n    }\n    function onCountdownEnd() {\n      counting.value = false;\n    }\n\n    return {\n      counting,\n      onCountdownEnd,\n      startCountdown,\n      formData,\n      validationSchema,\n      onSubmit,\n      onInvalidSubmit,\n      codeCheckRequestMade,\n      codeIsValid,\n    };\n  },\n});\n</script>\n<template>\n  <div class=\"card\">\n    <div class=\"card-body shadow-sm\">\n      <div class=\"mb-10 text-center\">\n        <h1 class=\"text-dark mb-3\">Create an Account</h1>\n\n        <div class=\"text-gray-400 fw-bold fs-4\">\n          Already have an account?\n\n          <router-link to=\"/sign-in\" class=\"link-primary fw-bolder\">\n            Sign in here\n          </router-link>\n        </div>\n      </div>\n\n      <div\n        class=\"stepper stepper-links d-flex flex-column\"\n        id=\"kt_create_account_stepper\"\n        ref=\"horizontalWizardRef\"\n      >\n        <div class=\"stepper-nav py-5 mt-5\">\n          <div class=\"stepper-item text-gray-400\" data-kt-stepper-element=\"nav\">\n            <h3 class=\"stepper-title text-gray-400\">Basic Info</h3>\n          </div>\n\n          <div class=\"stepper-item current\" data-kt-stepper-element=\"nav\">\n            <h3 class=\"stepper-title\">E-mail Verification</h3>\n          </div>\n\n          <div class=\"stepper-item\" data-kt-stepper-element=\"nav\">\n            <h3 class=\"stepper-title text-gray-400\">User Name</h3>\n          </div>\n\n          <div class=\"stepper-item\" data-kt-stepper-element=\"nav\">\n            <h3 class=\"stepper-title text-gray-400\">Binance Connection</h3>\n          </div>\n        </div>\n\n        <Form\n          class=\"mx-auto mw-600px w-100 pt-15 pb-10\"\n          ref=\"formRef\"\n          as=\"el-form\"\n          @submit=\"onSubmit\"\n          :validation-schema=\"validationSchema\"\n          @invalid-submit=\"onInvalidSubmit\"\n        >\n          <div class=\"fv-row mb-7\">\n            <div class=\"text-gray-400 fw-bold fs-4 mb-8\">\n              We've sent you an email verification code.\n            </div>\n\n            <label class=\"form-label fw-bolder text-dark fs-6\"\n              >E-mail verification code</label\n            >\n\n            <span\n              v-if=\"codeCheckRequestMade && !codeIsValid\"\n              class=\"badge badge-light-danger mx-2\"\n              >Invalid code</span\n            >\n\n            <Field\n              v-model=\"formData.code\"\n              class=\"form-control form-control-lg form-control-solid\"\n              type=\"number\"\n              placeholder=\"\"\n              name=\"code\"\n              autocomplete=\"off\"\n              oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"\n              maxlength=\"6\"\n              @input=\"codeCheckRequestMade = false\"\n            />\n            <div class=\"fv-plugins-message-container\">\n              <div class=\"fv-help-block\">\n                <ErrorMessage\n                  class=\"fv-plugins-message-container invalid-feedback\"\n                  name=\"code\"\n                />\n              </div>\n            </div>\n\n            <vue-countdown\n              v-if=\"counting\"\n              :time=\"180000\"\n              @end=\"onCountdownEnd\"\n              v-slot=\"{ totalSeconds }\"\n            >\n              <div>\n                <span class=\"text-gray-600\">Type code in </span>\n                <span class=\"text-gray-800\"> {{ totalSeconds }}</span>\n                <span class=\"text-gray-600\"> seconds</span>\n              </div>\n            </vue-countdown>\n            <a\n              class=\"cursor-pointer\"\n              v-else\n              :disabled=\"counting\"\n              @click=\"startCountdown\"\n              >send code again</a\n            >\n          </div>\n\n          <div class=\"text-center\">\n            <button\n              id=\"kt_sign_up_submit\"\n              ref=\"submitButton\"\n              type=\"submit\"\n              class=\"btn btn-lg btn-primary\"\n            >\n              <span class=\"indicator-label\"> Submit </span>\n              <span class=\"indicator-progress\">\n                Please wait...\n                <span\n                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                ></span>\n              </span>\n            </button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  </div>\n</template>\n\n","/*! vue-countdown v2.0.0 | (c) 2018-present Chen Fengyuan | MIT */\nimport { defineComponent, h } from 'vue';\n\nconst MILLISECONDS_SECOND = 1000;\r\nconst MILLISECONDS_MINUTE = 60 * MILLISECONDS_SECOND;\r\nconst MILLISECONDS_HOUR = 60 * MILLISECONDS_MINUTE;\r\nconst MILLISECONDS_DAY = 24 * MILLISECONDS_HOUR;\r\nconst EVENT_ABORT = 'abort';\r\nconst EVENT_END = 'end';\r\nconst EVENT_PROGRESS = 'progress';\r\nconst EVENT_START = 'start';\r\nconst EVENT_VISIBILITY_CHANGE = 'visibilitychange';\r\nvar index = defineComponent({\r\n    name: 'VueCountdown',\r\n    props: {\r\n        /**\r\n         * Starts the countdown automatically when initialized.\r\n         */\r\n        autoStart: {\r\n            type: Boolean,\r\n            default: true,\r\n        },\r\n        /**\r\n         * Emits the countdown events.\r\n         */\r\n        emitEvents: {\r\n            type: Boolean,\r\n            default: true,\r\n        },\r\n        /**\r\n         * The interval time (in milliseconds) of the countdown progress.\r\n         */\r\n        interval: {\r\n            type: Number,\r\n            default: 1000,\r\n            validator: (value) => value >= 0,\r\n        },\r\n        /**\r\n         * Generate the current time of a specific time zone.\r\n         */\r\n        now: {\r\n            type: Function,\r\n            default: () => Date.now(),\r\n        },\r\n        /**\r\n         * The tag name of the component's root element.\r\n         */\r\n        tag: {\r\n            type: String,\r\n            default: 'span',\r\n        },\r\n        /**\r\n         * The time (in milliseconds) to count down from.\r\n         */\r\n        time: {\r\n            type: Number,\r\n            default: 0,\r\n            validator: (value) => value >= 0,\r\n        },\r\n        /**\r\n         * Transforms the output props before render.\r\n         */\r\n        transform: {\r\n            type: Function,\r\n            default: (props) => props,\r\n        },\r\n    },\r\n    emits: [\r\n        EVENT_ABORT,\r\n        EVENT_END,\r\n        EVENT_PROGRESS,\r\n        EVENT_START,\r\n    ],\r\n    data() {\r\n        return {\r\n            /**\r\n             * It is counting down.\r\n             * @type {boolean}\r\n             */\r\n            counting: false,\r\n            /**\r\n             * The absolute end time.\r\n             * @type {number}\r\n             */\r\n            endTime: 0,\r\n            /**\r\n             * The remaining milliseconds.\r\n             * @type {number}\r\n             */\r\n            totalMilliseconds: 0,\r\n            /**\r\n             * The request ID of the requestAnimationFrame.\r\n             * @type {number}\r\n             */\r\n            requestId: 0,\r\n        };\r\n    },\r\n    computed: {\r\n        /**\r\n         * Remaining days.\r\n         * @returns {number} The computed value.\r\n         */\r\n        days() {\r\n            return Math.floor(this.totalMilliseconds / MILLISECONDS_DAY);\r\n        },\r\n        /**\r\n         * Remaining hours.\r\n         * @returns {number} The computed value.\r\n         */\r\n        hours() {\r\n            return Math.floor((this.totalMilliseconds % MILLISECONDS_DAY) / MILLISECONDS_HOUR);\r\n        },\r\n        /**\r\n         * Remaining minutes.\r\n         * @returns {number} The computed value.\r\n         */\r\n        minutes() {\r\n            return Math.floor((this.totalMilliseconds % MILLISECONDS_HOUR) / MILLISECONDS_MINUTE);\r\n        },\r\n        /**\r\n         * Remaining seconds.\r\n         * @returns {number} The computed value.\r\n         */\r\n        seconds() {\r\n            return Math.floor((this.totalMilliseconds % MILLISECONDS_MINUTE) / MILLISECONDS_SECOND);\r\n        },\r\n        /**\r\n         * Remaining milliseconds.\r\n         * @returns {number} The computed value.\r\n         */\r\n        milliseconds() {\r\n            return Math.floor(this.totalMilliseconds % MILLISECONDS_SECOND);\r\n        },\r\n        /**\r\n         * Total remaining days.\r\n         * @returns {number} The computed value.\r\n         */\r\n        totalDays() {\r\n            return this.days;\r\n        },\r\n        /**\r\n         * Total remaining hours.\r\n         * @returns {number} The computed value.\r\n         */\r\n        totalHours() {\r\n            return Math.floor(this.totalMilliseconds / MILLISECONDS_HOUR);\r\n        },\r\n        /**\r\n         * Total remaining minutes.\r\n         * @returns {number} The computed value.\r\n         */\r\n        totalMinutes() {\r\n            return Math.floor(this.totalMilliseconds / MILLISECONDS_MINUTE);\r\n        },\r\n        /**\r\n         * Total remaining seconds.\r\n         * @returns {number} The computed value.\r\n         */\r\n        totalSeconds() {\r\n            return Math.floor(this.totalMilliseconds / MILLISECONDS_SECOND);\r\n        },\r\n    },\r\n    watch: {\r\n        $props: {\r\n            deep: true,\r\n            immediate: true,\r\n            /**\r\n             * Update the countdown when props changed.\r\n             */\r\n            handler() {\r\n                this.totalMilliseconds = this.time;\r\n                this.endTime = this.now() + this.time;\r\n                if (this.autoStart) {\r\n                    this.start();\r\n                }\r\n            },\r\n        },\r\n    },\r\n    mounted() {\r\n        document.addEventListener(EVENT_VISIBILITY_CHANGE, this.handleVisibilityChange);\r\n    },\r\n    beforeUnmount() {\r\n        document.removeEventListener(EVENT_VISIBILITY_CHANGE, this.handleVisibilityChange);\r\n        this.pause();\r\n    },\r\n    methods: {\r\n        /**\r\n         * Starts to countdown.\r\n         * @public\r\n         * @emits Countdown#start\r\n         */\r\n        start() {\r\n            if (this.counting) {\r\n                return;\r\n            }\r\n            this.counting = true;\r\n            if (this.emitEvents) {\r\n                /**\r\n                 * Countdown start event.\r\n                 * @event Countdown#start\r\n                 */\r\n                this.$emit(EVENT_START);\r\n            }\r\n            if (document.visibilityState === 'visible') {\r\n                this.continue();\r\n            }\r\n        },\r\n        /**\r\n         * Continues the countdown.\r\n         * @private\r\n         */\r\n        continue() {\r\n            if (!this.counting) {\r\n                return;\r\n            }\r\n            const delay = Math.min(this.totalMilliseconds, this.interval);\r\n            if (delay > 0) {\r\n                let init;\r\n                let prev;\r\n                const step = (now) => {\r\n                    if (!init) {\r\n                        init = now;\r\n                    }\r\n                    if (!prev) {\r\n                        prev = now;\r\n                    }\r\n                    const range = now - init;\r\n                    if (range >= delay\r\n                        // Avoid losing time about one second per minute (now - prev ≈ 16ms) (#43)\r\n                        || range + ((now - prev) / 2) >= delay) {\r\n                        this.progress();\r\n                    }\r\n                    else {\r\n                        this.requestId = requestAnimationFrame(step);\r\n                    }\r\n                    prev = now;\r\n                };\r\n                this.requestId = requestAnimationFrame(step);\r\n            }\r\n            else {\r\n                this.end();\r\n            }\r\n        },\r\n        /**\r\n         * Pauses the countdown.\r\n         * @private\r\n         */\r\n        pause() {\r\n            cancelAnimationFrame(this.requestId);\r\n        },\r\n        /**\r\n         * Progresses to countdown.\r\n         * @private\r\n         * @emits Countdown#progress\r\n         */\r\n        progress() {\r\n            if (!this.counting) {\r\n                return;\r\n            }\r\n            this.totalMilliseconds -= this.interval;\r\n            if (this.emitEvents && this.totalMilliseconds > 0) {\r\n                /**\r\n                 * Countdown progress event.\r\n                 * @event Countdown#progress\r\n                 */\r\n                this.$emit(EVENT_PROGRESS, {\r\n                    days: this.days,\r\n                    hours: this.hours,\r\n                    minutes: this.minutes,\r\n                    seconds: this.seconds,\r\n                    milliseconds: this.milliseconds,\r\n                    totalDays: this.totalDays,\r\n                    totalHours: this.totalHours,\r\n                    totalMinutes: this.totalMinutes,\r\n                    totalSeconds: this.totalSeconds,\r\n                    totalMilliseconds: this.totalMilliseconds,\r\n                });\r\n            }\r\n            this.continue();\r\n        },\r\n        /**\r\n         * Aborts the countdown.\r\n         * @public\r\n         * @emits Countdown#abort\r\n         */\r\n        abort() {\r\n            if (!this.counting) {\r\n                return;\r\n            }\r\n            this.pause();\r\n            this.counting = false;\r\n            if (this.emitEvents) {\r\n                /**\r\n                 * Countdown abort event.\r\n                 * @event Countdown#abort\r\n                 */\r\n                this.$emit(EVENT_ABORT);\r\n            }\r\n        },\r\n        /**\r\n         * Ends the countdown.\r\n         * @public\r\n         * @emits Countdown#end\r\n         */\r\n        end() {\r\n            if (!this.counting) {\r\n                return;\r\n            }\r\n            this.pause();\r\n            this.totalMilliseconds = 0;\r\n            this.counting = false;\r\n            if (this.emitEvents) {\r\n                /**\r\n                 * Countdown end event.\r\n                 * @event Countdown#end\r\n                 */\r\n                this.$emit(EVENT_END);\r\n            }\r\n        },\r\n        /**\r\n         * Updates the count.\r\n         * @private\r\n         */\r\n        update() {\r\n            if (this.counting) {\r\n                this.totalMilliseconds = Math.max(0, this.endTime - this.now());\r\n            }\r\n        },\r\n        /**\r\n         * visibility change event handler.\r\n         * @private\r\n         */\r\n        handleVisibilityChange() {\r\n            switch (document.visibilityState) {\r\n                case 'visible':\r\n                    this.update();\r\n                    this.continue();\r\n                    break;\r\n                case 'hidden':\r\n                    this.pause();\r\n                    break;\r\n            }\r\n        },\r\n    },\r\n    render() {\r\n        return h(this.tag, this.$slots.default ? [\r\n            this.$slots.default(this.transform({\r\n                days: this.days,\r\n                hours: this.hours,\r\n                minutes: this.minutes,\r\n                seconds: this.seconds,\r\n                milliseconds: this.milliseconds,\r\n                totalDays: this.totalDays,\r\n                totalHours: this.totalHours,\r\n                totalMinutes: this.totalMinutes,\r\n                totalSeconds: this.totalSeconds,\r\n                totalMilliseconds: this.totalMilliseconds,\r\n            })),\r\n        ] : undefined);\r\n    },\r\n});\n\nexport { index as default };\n","import { render } from \"./EmailVerification.vue?vue&type=template&id=0d8b44b4\"\nimport script from \"./EmailVerification.vue?vue&type=script&lang=js\"\nexport * from \"./EmailVerification.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/beratuslu/Desktop/fe-coinvestr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import store from \"@/store\";\nimport { Actions } from \"@/store/enums/StoreEnums\";\n\n/**\n * Sets current page breadcrumbs\n * @param {string} pageTitle Current page title\n * @param {Array<string>} breadcrumbs Current page breadcrumbs\n */\nexport const setCurrentPageBreadcrumbs = (\n  pageTitle: string,\n  breadcrumbs: Array<string>\n): void => {\n  store.dispatch(Actions.SET_BREADCRUMB_ACTION, {\n    title: pageTitle,\n    pageBreadcrumbPath: breadcrumbs,\n  });\n};\n\n/**\n * Sets current page breadcrumbs\n * @param {string} title Current page title name\n */\nexport const setCurrentPageTitle = (title: string): void => {\n  store.dispatch(Actions.SET_BREADCRUMB_ACTION, {\n    title: title,\n  });\n};\n"],"sourceRoot":""}